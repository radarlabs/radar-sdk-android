apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "org.jetbrains.dokka"
apply plugin: "maven-publish"
apply plugin: "signing"

ext {
    radarVersion = "3.2.2"
}

android {
    compileSdkVersion 31
     compileOptions {
         coreLibraryDesugaringEnabled = true
         sourceCompatibility = JavaVersion.VERSION_1_8
         targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 31
        buildConfigField "String", "VERSION_NAME", "\"$radarVersion\""
        multiDexEnabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    lintOptions {
        warningsAsErrors true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "com.google.android.gms:play-services-ads-identifier:17.1.0"
    implementation "com.google.android.gms:play-services-location:18.0.0"
    testImplementation "androidx.test.ext:junit:1.1.3"
    testImplementation "org.robolectric:robolectric:4.5.1"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
}

dokkaHtml.configure {
    outputDirectory.set(file("$rootDir/docs"))

    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

dokkaJavadoc.configure {
    outputDirectory.set(file("$rootDir/javadocs"))
}

task androidJavadocsJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar, androidJavadocsJar
}

publishing {
    publications {
        sdkPublication(MavenPublication) {
            groupId "io.radar"
            artifactId "sdk"
            version radarVersion
            artifact "$buildDir/outputs/aar/${project.getName()}-release.aar"
            artifact androidSourcesJar
            artifact androidJavadocsJar

            pom {
                name = "Radar Android SDK"
                description = "Android SDK for Radar, the leading geofencing and location tracking platform"
                url = "https://radar.io"

                licenses {
                    license {
                        name = "Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                organization {
                    name = "Radar Labs, Inc."
                    url = "https://radar.io"
                }

                developers {
                    developer {
                        id = "radarlabs"
                        name = "Radar Labs, Inc."
                    }
                }

                scm {
                    connection = "scm:git:git://github.com:radarlabs/radar-sdk-android.git"
                    developerConnection = "scm:git:ssh://github.com:radarlabs/radar-sdk-android.git"
                    url = "https://github.com/radarlabs/radar-sdk-android"
                }

                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each { dependency ->
                        if (dependency.group == null || dependency.name == null || dependency.version == null) {
                            return
                        }
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username = project.properties["nexusUsername"] != null ? project.properties["nexusUsername"] : ""
                password = project.properties["nexusPassword"] != null ? project.properties["nexusPassword"] : ""
            }
        }
    }
}

signing {
    sign publishing.publications.sdkPublication
}
